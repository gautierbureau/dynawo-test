name: Dynawo Tag

on: [push]

defaults:
  run:
    shell: bash
jobs:
  macos:
    name: MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Pre-requisites
        run: brew install automake gnu-sed

      - name: Install
        run: |
          ln -s /usr/local/bin/gfortran-9 /usr/local/bin/gfortran
          git clone https://github.com/dynawo/dynawo.git
          cd dynawo
          git checkout v1.2.0
          export DYNAWO_HOME=$(pwd)
          export DYNAWO_SRC_OPENMODELICA=$DYNAWO_HOME/OpenModelica/Source
          export DYNAWO_INSTALL_OPENMODELICA=$DYNAWO_HOME/OpenModelica/Install
          export DYNAWO_LOCALE=en_GB
          export DYNAWO_NB_PROCESSORS_USED=1
          export DYNAWO_BUILD_TYPE=Release
          export DYNAWO_CXX11_ENABLED=YES
          export DYNAWO_COMPILER=CLANG
          export DYNAWO_RESULTS_SHOW=false
          #sed -i '' 's/-DENABLE_OPENSSL=OFF/-DENABLE_OPENSSL=OFF -DENABLE_ZSTD=OFF/' dynawo/3rdParty/CMakeLists.txt
          #sed -i '' 's/|| error_exit "Copy of.*//' util/envDynawo.sh
          ./util/envDynawo.sh build-user
          cd $DYNAWO_INSTALL_OPENMODELICA
          find lib -name "libipopt*" -exec rm -f '{}' \;
          find lib -name "libcoinmumps*" -exec rm -f '{}' \;
          find lib -name "*.a" -exec rm -f '{}' \;
          find lib -name "libamd*" -exec rm -f '{}' \;
          find lib -name "libbtf*" -exec rm -f '{}' \;
          find lib -name "libcminpack*" -exec rm -f '{}' \;
          find lib -name "libcolamd*" -exec rm -f '{}' \;
          find lib -name "libklu*" -exec rm -f '{}' \;
          find lib -name "liblis*" -exec rm -f '{}' \;
          find lib -name "libomopcua*" -exec rm -f '{}' \;
          find lib -name "libOpenModelicaFMIRuntimeC*" -exec rm -f '{}' \;
          find lib -name "libSimulationRuntimeC*" -exec rm -f '{}' \;
          find lib -name "libsundials*" -exec rm -f '{}' \;
          find lib -name "libumfpack*" -exec rm -f '{}' \;
          find lib -name "libzlib*" -exec rm -f '{}' \;
          cd -
          ./util/envDynawo.sh distrib-omc
          version=$(./util/envDynawo.sh version | cut -f1 -d' ')
          asset_id=$(curl -s -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' --request GET https://api.github.com/repos/gautierbureau/dynawo-test/releases/tags/test | grep -B 2 -m 1 Dynawo_MacOS_v${version}.zip | grep '"id"' | awk '{print $2}' | tr -d ',')
          [ ! -z "$asset_id" ] && curl -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' -X DELETE https://api.github.com/repos/gautierbureau/dynawo-test/releases/assets/${asset_id}
          upload_url=$(curl -s -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' --request GET https://api.github.com/repos/gautierbureau/dynawo-test/releases/tags/test | grep upload_url | cut -d '"' -f 4 | grep -o ".*assets")
          curl -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' -H 'Content-Type: application/zip' -X POST  ${upload_url}?name=Dynawo_MacOS_v${version}.zip --data-binary @distributions/Dynawo_omc_V${version}.zip
